package apply

import (
	"encoding/json"
	"fmt"
	"os"

	"github.com/gerrytan/azdiffit/internal/jsonutil"
	"github.com/gerrytan/azdiffit/internal/plan"
)

func RunApply() error {
	if len(os.Args) < 3 {
		printUsage()
		os.Exit(1)
	}

	arg := os.Args[2]

	switch arg {
	case "help", "-h", "--help":
		printUsage()
		os.Exit(0)

	default:
		var plan plan.Plan
		planFile := arg

		fmt.Printf("📖 Reading plan file: %s\n", planFile)
		data, err := os.ReadFile(planFile)
		if err != nil {
			return fmt.Errorf("❌ Failed to read plan file %s: %w", planFile, err)
		}

		err = json.Unmarshal(jsonutil.StripJSONComments(data), &plan)
		if err != nil {
			return fmt.Errorf("❌ Failed to deserialize plan from %s: %w", planFile, err)
		}

		fmt.Printf("🔄 Applying %d RP registrations...\n", len(plan.RpRegistrations))
		err = applyRpRegistrations(plan.RpRegistrations)
		if err != nil {
			return fmt.Errorf("❌ Failed to apply RP registrations: %w", err)
		}

		fmt.Printf("✅ Plan applied successfully!\n")

	}
	return nil
}

func printUsage() {
	fmt.Println("azdiffit apply - Apply the plan to the target Azure subscription")
	fmt.Println()
	fmt.Println("USAGE:")
	fmt.Println("  azdiffit apply <plan-file>")
	fmt.Println()
	fmt.Println("DESCRIPTION:")
	fmt.Println("  This command applies the plan that was generated by azdiffit plan to the target Azure subscription.")
}
